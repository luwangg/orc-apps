// Authors: Eduardo Juarez, Wei Jianguo and Ren Rong <eduardo.juarez@upm.es> of UPM (Spain) 
// modified by: Damien de Saint Jorre <damien.desaintjorre@epfl.ch>

package org.ietr.mpegh.part2.main.IT;

import org.sc29.wg11.mpegh.part2.common.CommonConstantHEVC.*;
import org.ietr.mpegh.part2.main.IT.TransformFunctions.*;

actor IT_chroma()
	int(size=8)  Size,                                          
	int(size=16) Coeff
		==>                                    
	int(size=16)  Block_v  
		:
	
	
	getCoeff.isChromaV.is4x4: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff],
		Coeff:[coeff] repeat 4*4
			==>
		Block_v:[blockV] repeat 4*4
	guard
		sizeOfTU = 4 and RCskip = 0
	var
		int(size=16) blockV[4*4]
	do
		if(transfSkipFlag = 1) then
			transform_4x4_2_skip_zscan(blockV, coeff);
		else
			transform_4x4_zscan(blockV, coeff, 1, 0);
		end
	end
	
	getCoeff.isChromaV.is4x4.skip: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff]
			==>
		Block_v:[blockV] repeat 4*4
	guard
		sizeOfTU = 4 and RCskip != 0
	var
		int(size=16) blockV[4*4]
	do
		
		blockV := [0: for int i in 0 .. 15];
	end
	
	getCoeff.isChromaV.is8x8: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff],
		Coeff:[coeff] repeat 8*8
			==>
		Block_v:[blockV] repeat 8*8
	guard
		sizeOfTU = 8 and RCskip = 0
	var
		int(size=16) blockV[8*8]
	do
		if(transfSkipFlag = 1) then
			transform_8x8_2_skip_zscan(blockV, coeff);
		else
			transform_8x8_zscan(blockV, coeff, 1);
		end
	end
	
	getCoeff.isChromaV.is8x8.skip: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff]
			==>
		Block_v:[blockV] repeat 8*8
	guard
		sizeOfTU = 8 and RCskip != 0
	var
		int(size=16) blockV[8*8]
	do
		blockV := [0: for int i in 0 .. 63];
	end

	getCoeff.isChromaV.is16x16: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff],
		Coeff:[coeff] repeat 16*16
			==>
		Block_v:[blockV] repeat 16*16
	guard
		sizeOfTU = 16 and RCskip = 0
	var
		int(size=16) blockV[16*16]
	do
		if(transfSkipFlag = 1) then
			transform_16x16_2_skip_zscan(blockV, coeff);
		else
			transform_16x16_zscan(blockV, coeff, 2);
		end
	end
	
	getCoeff.isChromaV.is16x16.skip: action
		Size:[sizeOfTU, RCskip, isDST, transfSkipFlag, slcQp, rcCIdx, qpOff]
			==>
		Block_v:[blockV] repeat 16*16
	guard
		sizeOfTU = 16 and RCskip != 0
	var
		int(size=16) blockV[16*16]
	do
		blockV := [0: for int i in 0 .. 255];
	end

	getCoeff_is64x64: action
		Size:[param] repeat 7*3
			==>
		Block_v:[[0: for int i in 0 .. 1023]] repeat 1024
	guard
		param[0] = 64
	end

	schedule fsm GetCoeff:
		GetCoeff  (getCoeff         )--> GetCoeff;
		GetCoeff  (getCoeff_is64x64 )--> GetCoeff;
	end
end
