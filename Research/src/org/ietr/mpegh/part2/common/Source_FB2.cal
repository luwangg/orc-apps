package org.ietr.mpegh.part2.common;
import std.stdio.Source.*;

actor Source_FB2 () ==> uint(size=8) O0,uint(size=8) O1,uint(size=8) Om:
	
	uint(size=8) bytesRead[NB_TOKEN_TO_SENT_FB];
	
	uint NB_TOKEN_TO_SENT_FB = 524288;
	
	uint iterationLoop := 0;
	uint nbByteLeft;
	uint nbByteToSend := 0;
	uint nbByteSent_0 := 0;
	uint nbByteSent_1 := 0;
	uint nbByteSent_m := 0;
	uint nbIteration;
	
	initialize ==>
	do
		source_init();
	end
	
	getFileSize: action ==>
	guard
		source_sizeOfFile() > 0,
		not source_isMaxLoopsReached()
	var
		uint(size=32) nbBytes
	do
		nbBytes := source_sizeOfFile();
		nbIteration := nbBytes / NB_TOKEN_TO_SENT_FB;
		nbByteLeft := nbBytes mod NB_TOKEN_TO_SENT_FB;
	end
	
	readNBytes: action ==>
	guard
		iterationLoop < nbIteration
	do
		source_readNBytes(bytesRead, NB_TOKEN_TO_SENT_FB);
		nbByteToSend := NB_TOKEN_TO_SENT_FB;
		nbByteSent_0 := 0;
		nbByteSent_1 := 0;
		nbByteSent_m := 0;
		iterationLoop := iterationLoop + 1;
	end
	
	readEndOfFile: action ==>
	guard
		nbByteLeft > 0
	do
		source_readNBytes(bytesRead, nbByteLeft);
		nbByteToSend := nbByteLeft;
		nbByteSent_0 := 0;
		nbByteSent_1 := 0;
		nbByteSent_m := 0;
		source_decrementNbLoops();
	end
	
	readFileDone: action ==>
	do
		iterationLoop := 0;
		source_rewind();
	end
	
	sendData.launch.O0: action ==> O0:[ Out ]
	guard
		nbByteToSend > nbByteSent_0
	var
		uint(size=8) Out
	do
		Out := bytesRead[nbByteSent_0];
		nbByteSent_0 := nbByteSent_0 + 1;
	end
	
	sendData.launch.O1: action ==> O1:[ Out ]
	guard
		nbByteToSend > nbByteSent_1
	var
		uint(size=8) Out
	do
		Out := bytesRead[nbByteSent_1];
		nbByteSent_1 := nbByteSent_1 + 1;
	end
	
	sendData.launch.Om: action ==> Om:[ Out ]
	guard
		nbByteToSend > nbByteSent_m
	var
		uint(size=8) Out
	do
		Out := bytesRead[nbByteSent_m];
		nbByteSent_m := nbByteSent_m + 1;
	end
	
	sendData.done: action ==>
	guard
		nbByteToSend = nbByteSent_0,
		nbByteToSend = nbByteSent_1,
		nbByteToSend = nbByteSent_m
	end
	
	schedule fsm ReadInit :
		ReadInit (getFileSize) --> ReadFile;
	
		ReadFile (readNBytes   ) --> SendData;
		ReadFile (readEndOfFile) --> SendLastData;
		ReadFile (readFileDone ) --> ReadFile;
	
		SendData (sendData.launch) --> SendData;
		SendData (sendData.done  ) --> ReadFile;
	
		SendLastData (sendData.launch) --> SendLastData;
		SendLastData (sendData.done  ) --> ReadFileDone;
	
		ReadFileDone (readFileDone) --> ReadInit;
	end
	
	priority
		readNBytes > readEndOfFile > readFileDone;
		sendData.launch > sendData.done;
	end
	
end