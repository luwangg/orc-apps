/********************************************************************************

This software module was originally developed by 
Gildas Cocherel and khaled JERBI (IETR/INSA of Rennes), 
in the course of development of the ISO/IEC 23002-5 (Video Tool Library) 
for reference purposes and its performance may not have been optimized. 
This software module is an implementation of one or more tools as 
specified by the ISO/IEC 23002-5.

ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
license to copy, distribute, and make derivative works of this software 
module or modifications thereof for use in implementations of the 
ISO/IEC 23002-5 in products that satisfy conformance criteria (if any). 

Those intending to use this software module in products are advised that 
its use may infringe existing patents. ISO/IEC have no liability for use 
of this software module or modifications thereof.

Copyright is not released for products that do not conform to audiovisual 
and image-coding related ITU Recommendations and/or ISO/IEC International 
Standards. 

Assurance that the originally developed software module can be used 
(1) in the ISO/IEC 23002-5 once the ISO/IEC 23002-5 has been adopted; and 
(2) to develop the ISO/IEC 23002-5: 

IETR/INSA of Rennes grants ISO/IEC all rights necessary to 
include the originally developed software module or modifications thereof 
in the ISO/IEC 23002-5 and to permit ISO/IEC to offer You a royalty-free, 
worldwide, non-exclusive, copyright license to copy, distribute, and make 
derivative works for use in implementations of the ISO/IEC 23002-5 in 
products that satisfy conformance criteria (if any), and to the extent 
that such originally developed software module or portions of it are 
included in the ISO/IEC 23002-5.  To the extent that IETR/INSA of Rennes
owns patent rights that would be required to make, use, or 
sell the originally developed software module or portions thereof 
included in the ISO/IEC 23002-5 in a conforming product, IETR/INSA of
Rennes will assure the ISO/IEC that it is willing to 
negotiate licenses under reasonable and non-discriminatory terms and 
conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications 
thereof for the sole  purpose of developing theISO/IEC 23002-5

IETR/INSA of Rennes retains full right to modify and use the 
code for its own purpose, assign or donate the code to a third party and 
to inhibit third parties from using the code for products that do not 
conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
Standards. 

This copyright notice must be included in all copies or derivative works. 
Copyright (c) ISO/IEC 2011-2014.
 

*****************************************************************************/
/******************************************************************************
 * Definition of CommonPackage
 *****************************************************************************/
package org.sc29.wg11.mpegh.part2.common;

import  org.sc29.wg11.mpegh.part2.common.CommonConstantHEVC.*;

unit CabacContextConstantHEVC :
	bool DEBUG_BITSTREAM = false;
	bool DEBUG_CABAC     = false;	
	bool CHECK_CABAC     = false;	
	bool DEBUG_TRACE1    = false;
	bool FPS_TRACE       = false;
	/*************************************************************************
	 ********       		CONSTANT Syntax Element		   	          ********
	 *************************************************************************/
	/*************************************************************************
	 ********       		CONSTANT					   	          ********
	 *************************************************************************/
	uint(size=10) MAX_NUM_CTX_MOD						= 512;      ///< maximum number of supported contexts
	uint(size= 8) NUM_DUMMY								=   1;      ///< number of context models for split flag
	uint(size= 8) NUM_SAO_MERGE_FLAG					= 	1;
	uint(size= 8) NUM_SAO_TYPE_IDX						=	1;
	//uint(size= 8) NUM_SAO_BAND_POSITION				=	0;
	uint(size= 8) NUM_SPLIT_CODING_UNIT_FLAG			=	3;
	uint(size= 8) NUM_CU_TRANSQUANT_BYPASS_FLAG			=   1;
	uint(size= 8) NUM_SKIP_FLAG							=	3;
	uint(size= 8) NUM_CU_QP_DELTA						=	3;
	uint(size= 8) NUM_PRED_MODE_FLAG					=	1;
	uint(size= 8) NUM_PART_MODE							=	4;
	uint(size= 8) NUM_PREV_INTRA_LUMA_PRED_FLAG			=	1;
	uint(size= 8) NUM_INTRA_CHROMA_PRED_MODE			=	1;
	uint(size= 8) NUM_MERGE_FLAG						=	1;
	uint(size= 8) NUM_MERGE_IDX							=	1;
	uint(size= 8) NUM_INTER_PRED_IDC					=	5;
	uint(size= 8) NUM_REF_IDX_L0						=	2;
	uint(size= 8) NUM_REF_IDX_L1						=	2;
	uint(size= 8) NUM_ABS_MVD_GREATER0_FLAG				=	2;
	uint(size= 8) NUM_ABS_MVD_GREATER1_FLAG 			=	2;
	uint(size= 8) NUM_MVP_LX_FLAG						=	1;
	uint(size= 8) NUM_NO_RESIDUAL_SYNTAX_FLAG			=	1;
	uint(size= 8) NUM_SPLIT_TRANSFORM_FLAG				=	3;
	uint(size= 8) NUM_CBF_LUMA							=	5;
	uint(size= 8) NUM_CBF_CB_CR							=	5;
	uint(size= 8) NUM_LAST_SIGNIFICANT_COEFF_X_PREFIX	=  30;
	uint(size= 8) NUM_LAST_SIGNIFICANT_COEFF_Y_PREFIX	=  30;
	uint(size= 8) NUM_CODED_SUB_BLOCK_FLAG				=   4;
	uint(size= 8) NUM_SIGNIFICANT_COEFF_FLAG			=  42;
	uint(size= 8) NUM_COEFF_ABS_LEVEL_GREATER1_FLAG		=  24;
	uint(size= 8) NUM_COEFF_ABS_LEVEL_GREATER2_FLAG		=	6;
	uint(size= 8) NUM_TRANSFORM_SKIP_FLAG				=   2;
	uint(size= 8) CNU									= 154;//119;      ///< dummy initialization value for unused context models 'Context model Not Used'
	uint(size= 8) CABAC_MAX_BIN							=  32;
	/*************************************************************************
	 ********       		CONSTANT Syntax Element		   	          ********
	 *************************************************************************/
	uint(size= 8) SE_DUMMY								=  0;
	uint(size= 8) SE_SAO_MERGE_FLAG						=  SE_DUMMY + 1;
	uint(size= 8) SE_SAO_TYPE_IDX						=  SE_SAO_MERGE_FLAG + 1;
//	uint(size= 8) SE_SAO_BAND_POSITION					=	4;
	uint(size= 8) SE_SPLIT_CODING_UNIT_FLAG				=  SE_SAO_TYPE_IDX + 1;
	uint(size= 8) SE_CU_TRANSQUANT_BYPASS_FLAG			=  SE_SPLIT_CODING_UNIT_FLAG + 1;
	uint(size= 8) SE_SKIP_FLAG							=  SE_CU_TRANSQUANT_BYPASS_FLAG + 1;
	uint(size= 8) SE_CU_QP_DELTA						=  SE_SKIP_FLAG + 1;
	uint(size= 8) SE_PRED_MODE_FLAG						=  SE_CU_QP_DELTA + 1;
	uint(size= 8) SE_PART_MODE							=  SE_PRED_MODE_FLAG + 1;
	uint(size= 8) SE_PREV_INTRA_LUMA_PRED_FLAG			=  SE_PART_MODE + 1;
	uint(size= 8) SE_INTRA_CHROMA_PRED_MODE				=  SE_PREV_INTRA_LUMA_PRED_FLAG + 1;
	uint(size= 8) SE_MERGE_FLAG							=  SE_INTRA_CHROMA_PRED_MODE + 1;
	uint(size= 8) SE_MERGE_IDX							=  SE_MERGE_FLAG + 1;
	uint(size= 8) SE_INTER_PRED_IDC						=  SE_MERGE_IDX + 1;
	uint(size= 8) SE_REF_IDX_L0							=  SE_INTER_PRED_IDC + 1;
	uint(size= 8) SE_REF_IDX_L1							=  SE_REF_IDX_L0 + 1;
	uint(size= 8) SE_ABS_MVD_GREATER0_FLAG				=  SE_REF_IDX_L1 + 1;
	uint(size= 8) SE_ABS_MVD_GREATER1_FLAG				=  SE_ABS_MVD_GREATER0_FLAG + 1;
	uint(size= 8) SE_MVP_LX_FLAG						=  SE_ABS_MVD_GREATER1_FLAG + 1;
	uint(size= 8) SE_NO_RESIDUAL_SYNTAX_FLAG			=  SE_MVP_LX_FLAG + 1;
	uint(size= 8) SE_SPLIT_TRANSFORM_FLAG				=  SE_NO_RESIDUAL_SYNTAX_FLAG + 1;
	uint(size= 8) SE_CBF_LUMA							=  SE_SPLIT_TRANSFORM_FLAG + 1;
	uint(size= 8) SE_CBF_CB_CR							=  SE_CBF_LUMA + 1;
	uint(size= 8) SE_LAST_SIGNIFICANT_COEFF_X_PREFIX	=  SE_CBF_CB_CR + 1;
	uint(size= 8) SE_LAST_SIGNIFICANT_COEFF_Y_PREFIX	=  SE_LAST_SIGNIFICANT_COEFF_X_PREFIX + 1;
	uint(size= 8) SE_CODED_SUB_BLOCK_FLAG				=  SE_LAST_SIGNIFICANT_COEFF_Y_PREFIX + 1;
	uint(size= 8) SE_SIGNIFICANT_COEFF_FLAG				=  SE_CODED_SUB_BLOCK_FLAG + 1;
	uint(size= 8) SE_COEFF_ABS_LEVEL_GREATER1_FLAG		=  SE_SIGNIFICANT_COEFF_FLAG + 1;
	uint(size= 8) SE_COEFF_ABS_LEVEL_GREATER2_FLAG		=  SE_COEFF_ABS_LEVEL_GREATER1_FLAG + 1;
	uint(size= 8) SE_TRANSFORM_SKIP_FLAG				=  SE_COEFF_ABS_LEVEL_GREATER2_FLAG + 1;
	//
	uint(size= 8) NB_MAX_SE								=  SE_TRANSFORM_SKIP_FLAG + 1;
	uint(size= 8) NB_MAX_NUM_CTX						=  48;
	/*************************************************************************
	 ********       		SAO CONSTANT        		   	          ********
	 *************************************************************************/
	uint(size= 8) SAO_NOT_APPLIED						=   0;
	uint(size= 8) SAO_BAND								=   1;
	uint(size= 8) SAO_EDGE								=   2;
	uint(size= 8) MAX_NUM_SAO_TYPE						=   3;
	/*************************************************************************
	 ********       		OTHERS CONSTANT        		   	          ********
	 *************************************************************************/	
	uint(size= 8) LM_CHROMA_IDX							=  35;
	uint(size= 8) DM_CHROMA_IDX							=  36;
	/**************************************************************************
	 * GLOBAL pcRPS STRUCT
 	 *************************************************************************/
    uint(size=18) CTB_ADDR_TS_MAX                      =  4096;//(PICT_WIDTH/MIN_CTB_SIZE_Y)*(PICT_HEIGHT/MIN_CTB_SIZE_Y);
	
end
