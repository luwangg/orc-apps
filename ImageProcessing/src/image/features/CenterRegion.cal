/* Copyright (c) 2010-2011, SCI-STI-MM Group
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the �cole Polytechnique F�d�rale de Lausanne (EPFL) nor 
 *     the names of its contributors may be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL SCI-STI-MM Group BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package image.features; 
/*
 * Authors: Richard Thavot <richard.thavot@epfl.ch>
 *		    Simone Casale Brunet <simone.casalebrunet@epfl.ch>
 * 
 * Create Date:   2011/03/02
 * Design Name:   CenterRegion 
 * Project Name:  ImageProcessing
 * Tool versions: Orcc
 * Description: 
 * 		Give the center region limits of an image.
 * 			- x,y : the center of the image
 * 			- dx,dy : give the spacing between the center and the interest region.
 * Dependencies:
 * 
 * Revision:
 * 
 * Additional Comments:
 * 		dx := width/4 & dy := height / 4 
 */
actor CenterRegion()
 uint(size=16) SizeOfImage
 ==> 
 uint(size=16) Limits :


	action SizeOfImage:[ soi ] repeat 2
		==>  Limits:[ limits ] repeat 4
	var
		List(type: uint(size=16), size=4) limits
	do
		limits[0] := soi[0]/2; // x
		limits[1] := soi[1]/2; // y
		limits[2] := soi[0]/4; // dx
		limits[3] := soi[1]/4; // dy
	end




end
